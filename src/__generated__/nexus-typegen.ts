/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CommentInput: { // input type
    author_flair_background_color?: string | null; // String
    author_flair_richtext?: string | null; // String
    author_flair_template_id?: string | null; // String
    author_flair_text?: string | null; // String
    author_flair_type?: string | null; // String
    author_fullname: string; // String!
    author_name: string; // String!
    body: string; // String!
    created: number; // Int!
    created_utc: number; // Int!
    depth: number; // Int!
    edited?: boolean | null; // Boolean
    id: string; // String!
    link_id: string; // String!
    name: string; // String!
    parent_id: string; // String!
    permalink: string; // String!
  }
  UserInput: { // input type
    author_flair_background_color?: string | null; // String
    author_flair_richtext?: string | null; // String
    author_flair_template_id?: string | null; // String
    author_flair_text?: string | null; // String
    author_flair_type?: string | null; // String
    fullname: string; // String!
    name: string; // String!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Comment: { // root type
    author_fullname: string; // String!
    body: string; // String!
    created: number; // Int!
    created_utc: number; // Int!
    depth: number; // Int!
    edited: boolean; // Boolean!
    id: string; // String!
    link_id: string; // String!
    name: string; // String!
    parent_id: string; // String!
    permalink: string; // String!
  }
  Mutation: {};
  Query: {};
  Thread: { // root type
    author_fullname: string; // String!
    body?: string | null; // String
    created: number; // Int!
    created_utc: number; // Int!
    name: string; // String!
    permalink: string; // String!
    url: string; // String!
  }
  User: { // root type
    author_flair_background_color?: string | null; // String
    author_flair_richtext?: string | null; // String
    author_flair_template_id?: string | null; // String
    author_flair_text?: string | null; // String
    author_flair_type?: string | null; // String
    fullname: string; // String!
    name: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Comment: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    author_fullname: string; // String!
    body: string; // String!
    created: number; // Int!
    created_utc: number; // Int!
    depth: number; // Int!
    edited: boolean; // Boolean!
    id: string; // String!
    link_id: string; // String!
    name: string; // String!
    parent_id: string; // String!
    permalink: string; // String!
  }
  Mutation: { // field return type
    comment: NexusGenRootTypes['Comment'] | null; // Comment
    createUser: NexusGenRootTypes['User'] | null; // User
  }
  Query: { // field return type
    listComments: NexusGenRootTypes['Comment'][]; // [Comment!]!
  }
  Thread: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    author_fullname: string; // String!
    body: string | null; // String
    created: number; // Int!
    created_utc: number; // Int!
    name: string; // String!
    permalink: string; // String!
    url: string; // String!
  }
  User: { // field return type
    author_flair_background_color: string | null; // String
    author_flair_richtext: string | null; // String
    author_flair_template_id: string | null; // String
    author_flair_text: string | null; // String
    author_flair_type: string | null; // String
    comments: Array<NexusGenRootTypes['Comment'] | null> | null; // [Comment]
    fullname: string; // String!
    name: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Comment: { // field return type name
    author: 'User'
    author_fullname: 'String'
    body: 'String'
    created: 'Int'
    created_utc: 'Int'
    depth: 'Int'
    edited: 'Boolean'
    id: 'String'
    link_id: 'String'
    name: 'String'
    parent_id: 'String'
    permalink: 'String'
  }
  Mutation: { // field return type name
    comment: 'Comment'
    createUser: 'User'
  }
  Query: { // field return type name
    listComments: 'Comment'
  }
  Thread: { // field return type name
    author: 'User'
    author_fullname: 'String'
    body: 'String'
    created: 'Int'
    created_utc: 'Int'
    name: 'String'
    permalink: 'String'
    url: 'String'
  }
  User: { // field return type name
    author_flair_background_color: 'String'
    author_flair_richtext: 'String'
    author_flair_template_id: 'String'
    author_flair_text: 'String'
    author_flair_type: 'String'
    comments: 'Comment'
    fullname: 'String'
    name: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    comment: { // args
      data: NexusGenInputs['CommentInput']; // CommentInput!
    }
    createUser: { // args
      data: NexusGenInputs['UserInput']; // UserInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}